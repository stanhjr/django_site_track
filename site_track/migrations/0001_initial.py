# Generated by Django 4.0.4 on 2022-08-31 06:39

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import site_track.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('money_spent', models.PositiveIntegerField(default=0)),
                ('full_name', models.CharField(blank=True, max_length=120, null=True)),
                ('company', models.CharField(blank=True, max_length=120, null=True)),
                ('position_in_company', models.CharField(blank=True, max_length=120, null=True)),
                ('address_of_company', models.CharField(blank=True, max_length=120, null=True)),
                ('number_of_trucks_in_fleet', models.IntegerField(null=True)),
                ('telephone_number_direct', models.CharField(max_length=30, null=True)),
                ('subscription_one_time', models.BooleanField(default=False)),
                ('subscribe_until_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('is_confirm', models.BooleanField(default=False)),
                ('reset_password_code', models.CharField(blank=True, max_length=120, null=True)),
                ('code', models.CharField(blank=True, max_length=120, null=True)),
                ('account_name', models.CharField(blank=True, max_length=60, null=True)),
                ('account_type', models.CharField(choices=[('individual', 'individual'), ('dealership', 'dealership')], default='individual', max_length=120, null=True)),
                ('phone_number', models.CharField(max_length=30, null=True)),
                ('web_site', models.CharField(blank=True, max_length=120, null=True)),
                ('country', models.CharField(blank=True, max_length=120, null=True)),
                ('city', models.CharField(blank=True, max_length=60, null=True)),
                ('state', models.CharField(blank=True, max_length=60, null=True)),
                ('zip', models.CharField(blank=True, max_length=60, null=True)),
                ('about_vendor', models.TextField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('facebook', models.CharField(blank=True, max_length=60, null=True)),
                ('instagram', models.CharField(blank=True, max_length=60, null=True)),
                ('twitter', models.CharField(blank=True, max_length=60, null=True)),
                ('youtube', models.CharField(blank=True, max_length=60, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=60, null=True)),
                ('pinterest', models.CharField(blank=True, max_length=60, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CategoriesTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='category_images/')),
                ('name', models.SlugField(unique=True)),
            ],
            bases=(models.Model, site_track.models.ChoicesMixin),
        ),
        migrations.CreateModel(
            name='FakeReviewIndexHome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_sale', models.TextField(default='Lorem ipsum dolor sit amet consectetur adipisicin')),
                ('review_title', models.TextField(default='Lorem ipsum dolor sit amet consectetur adipisicin')),
                ('review_text', models.TextField(default='Lorem ipsum dolor sit amet consectetur adipisicin')),
                ('review_author', models.TextField(default='Lorem ipsum dolor sit amet consectetur adipisicin')),
                ('review_author_red_text', models.TextField(default='Lorem ipsum dolor sit amet consectetur adipisicin')),
                ('image', models.ImageField(null=True, upload_to='settings_images/')),
            ],
        ),
        migrations.CreateModel(
            name='FaqHeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_title', models.TextField(default='faq')),
                ('inventory_link_name', models.TextField(default='Faq')),
            ],
            bases=(models.Model, site_track.models.IsNotSingleHeaderMixin),
        ),
        migrations.CreateModel(
            name='MakeTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
            bases=(models.Model, site_track.models.ChoicesMixin),
        ),
        migrations.CreateModel(
            name='ModelTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
            bases=(models.Model, site_track.models.ChoicesMixin),
        ),
        migrations.CreateModel(
            name='SettingsAuthBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(default='Lorem ipsum dolor sit amet consectetur adipisicing')),
                ('text', models.TextField(default='Elit Iusto dolore libero recusandae dolor dolores explicabo ullam cum facilis aperiam alias odio quam excepturi molestiae omnis inventore. Repudiandae officiaplaceat amet consectetur dicta dolorem quo')),
            ],
        ),
        migrations.CreateModel(
            name='SettingsFooter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_company_title', models.TextField(default='About Company', null=True)),
                ('about_company_text', models.TextField(default='Lorem ipsum, dolor sit amet consectetur adipisicing elit. Incidunt ullam repellat sit. Ipsa saepe maiores placeat eligendi totam quisquam necessitatibus dignissimos', null=True)),
                ('facebook_url', models.URLField(default='https://www.facebook.com/', null=True)),
                ('twitter_url', models.URLField(default='https://twitter.com/', null=True)),
                ('linkedin_url', models.URLField(default='https://www.linkedin.com/', null=True)),
                ('whatsapp_phone', models.CharField(default='', max_length=60, null=True)),
                ('youtube_url', models.URLField(default='https://www.youtube.com/', null=True)),
                ('email_1', models.EmailField(default='info@bymyfleet.com', max_length=254, null=True)),
                ('email_2', models.EmailField(default='info@bymyfleet.com', max_length=254, null=True)),
                ('phone_number_1', models.CharField(default='(260) 888-2323', max_length=120, null=True)),
                ('phone_number_2', models.CharField(default='(260) 888-2323', max_length=120, null=True)),
                ('address_top', models.CharField(default='1Hd- 50, 010 Avenue', max_length=120, null=True)),
                ('address_bottom', models.CharField(default='NY 90001 United States', max_length=120, null=True)),
                ('news_letter_title', models.CharField(default='Our Newsletter', max_length=120, null=True)),
                ('news_letter_text', models.CharField(default='Be the first to know about our offers and discounts by subscribing to the newsletter', max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SettingsHeaderAboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_title', models.TextField(default='About our company')),
                ('inventory_link_name', models.TextField(default='About-Us')),
            ],
            bases=(models.Model, site_track.models.IsNotSingleHeaderMixin),
        ),
        migrations.CreateModel(
            name='SettingsHeaderContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_title', models.TextField(default='contact us')),
                ('inventory_link_name', models.TextField(default='Contact')),
            ],
            bases=(models.Model, site_track.models.IsNotSingleHeaderMixin),
        ),
        migrations.CreateModel(
            name='SettingsHeaderHome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header_title', models.CharField(default='Used Equipment or Sale', max_length=120, null=True)),
                ('header_text', models.CharField(default='An Online Auction for your used Trucks and Trailers', max_length=500, null=True)),
                ('contact_email', models.EmailField(default='info@example.com', max_length=254, null=True)),
                ('contact_number', models.CharField(default='+91 987-654-3210', max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SettingsHeaderInventoryCatalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_title', models.TextField(default='Inventory Catalog View')),
                ('inventory_link_name', models.TextField(default='Inventory Catalog')),
            ],
            bases=(models.Model, site_track.models.IsNotSingleHeaderMixin),
        ),
        migrations.CreateModel(
            name='SettingsHeaderInventoryGrid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_title', models.TextField(default='Inventory Grid View')),
                ('inventory_link_name', models.TextField(default='Inventory Grid')),
            ],
            bases=(models.Model, site_track.models.IsNotSingleHeaderMixin),
        ),
        migrations.CreateModel(
            name='SettingsHeaderInventorySingle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_title', models.TextField(default='Inventory Single Page')),
                ('inventory_link_name', models.TextField(default='Inventory List')),
                ('inventory_single_page', models.TextField(default='Inventory Single')),
            ],
        ),
        migrations.CreateModel(
            name='SettingsHeaderPrivacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_title', models.TextField(default='Privacy Policy')),
                ('inventory_link_name', models.TextField(default='Privacy')),
            ],
            bases=(models.Model, site_track.models.IsNotSingleHeaderMixin),
        ),
        migrations.CreateModel(
            name='SettingsIndexHome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_start_title', models.TextField(default='find top categories')),
                ('part_start_text', models.TextField(default='Lorem ipsum dolor sit amet consectetur adipisicing')),
                ('part_features_title', models.TextField(default='our featured listing')),
                ('part_features_text', models.TextField(default='Lorem ipsum dolor sit amet consectetur adipisicin')),
                ('brand_part_title', models.TextField(default='browse by top brands')),
                ('brand_part_text', models.TextField(default='Lorem ipsum dolor sit amet consectetur adipisicin')),
                ('price_part_title', models.TextField(default='our ads pricing plans')),
                ('price_part_text', models.TextField(default='Lorem ipsum dolor sit amet consectetur adipisicin')),
                ('recent_part_title', models.TextField(default='recent add vehiclesn')),
                ('recent_part_text', models.TextField(default='Lorem ipsum dolor sit amet consectetur adipisicin')),
            ],
        ),
        migrations.CreateModel(
            name='ShouldInclude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
            bases=(models.Model, site_track.models.ChoicesMixin),
        ),
        migrations.CreateModel(
            name='SpringRide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
            bases=(models.Model, site_track.models.ChoicesMixin),
        ),
        migrations.CreateModel(
            name='TruckMake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
            bases=(models.Model, site_track.models.ChoicesMixin),
        ),
        migrations.CreateModel(
            name='TruckModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
            bases=(models.Model, site_track.models.ChoicesMixin),
        ),
        migrations.CreateModel(
            name='TypeOfTrailer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
            bases=(models.Model, site_track.models.ChoicesMixin),
        ),
        migrations.CreateModel(
            name='SaleAds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, null=True)),
                ('check_engine_warning_lights', models.TextField(blank=True, max_length=5000, null=True)),
                ('type_of_5_wheel', models.CharField(blank=True, max_length=500, null=True)),
                ('jake_brake', models.CharField(blank=True, max_length=500, null=True)),
                ('wheel_base', models.CharField(blank=True, max_length=500, null=True)),
                ('number_of_aluminum_wheels', models.CharField(blank=True, max_length=500, null=True)),
                ('tire_size', models.CharField(blank=True, max_length=120, null=True)),
                ('any_know_problems_with_vehicle', models.TextField(blank=True, max_length=5000, null=True)),
                ('sleeper_size', models.CharField(blank=True, max_length=120, null=True)),
                ('tire_percent_front_right', models.PositiveIntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('tire_percent_front_left', models.PositiveIntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('tire_percent_rear_left', models.PositiveIntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('tire_percent_rear_right', models.PositiveIntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('tire_percent_rear_drive_tires', models.PositiveIntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('vehicle_year', models.DateField(blank=True, null=True)),
                ('vehicle_fuel', models.CharField(blank=True, max_length=60, null=True)),
                ('vehicle_price_amount', models.PositiveIntegerField(default=1000, null=True)),
                ('vehicle_condition', models.CharField(blank=True, max_length=60, null=True)),
                ('description', models.TextField(blank=True, max_length=5000, null=True)),
                ('preview_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('vehicle_mileage', models.PositiveIntegerField(blank=True, default=1000, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(blank=True, max_length=120, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('length', models.PositiveIntegerField(blank=True, default=1000, null=True)),
                ('width', models.PositiveIntegerField(blank=True, default=1000, null=True)),
                ('air_ride', models.CharField(blank=True, max_length=120, null=True)),
                ('capacity_of_trailer', models.CharField(blank=True, max_length=120, null=True)),
                ('virgin_tires_or_recapped', models.CharField(blank=True, max_length=120, null=True)),
                ('sales', models.BooleanField(default=False)),
                ('last_price', models.PositiveIntegerField(default=0, null=True)),
                ('sale_end_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('send_email_to_winner', models.BooleanField(default=False)),
                ('should_include', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_ads', to='site_track.shouldinclude')),
                ('spring_ride', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_ads', to='site_track.springride')),
                ('truck_make', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_ads', to='site_track.truckmake')),
                ('truck_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_ads', to='site_track.truckmodel')),
                ('type_of_5_trailer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_ads', to='site_track.typeoftrailer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_ads', to=settings.AUTH_USER_MODEL)),
                ('user_bet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auction_bet', to=settings.AUTH_USER_MODEL)),
                ('user_watch', models.ManyToManyField(blank=True, null=True, related_name='auction_watch', to=settings.AUTH_USER_MODEL)),
                ('vehicle_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_ads', to='site_track.categoriestrack')),
                ('vehicle_make', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_ads', to='site_track.maketrack')),
                ('vehicle_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_ads', to='site_track.modeltrack')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ImageInGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_in_gallery', to='site_track.saleads')),
            ],
        ),
    ]
